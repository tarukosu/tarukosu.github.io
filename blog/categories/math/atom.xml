<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Math | 東大院生プログラマの日常]]></title>
  <link href="http://tarukosu.github.io/blog/categories/math/atom.xml" rel="self"/>
  <link href="http://tarukosu.github.io/"/>
  <updated>2014-03-03T23:24:46+09:00</updated>
  <id>http://tarukosu.github.io/</id>
  <author>
    <name><![CDATA[tarukosu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ケアレスミスの防ぎ方（反復法）]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/03/repeat/"/>
    <updated>2014-03-03T23:07:22+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/03/repeat</id>
    <content type="html"><![CDATA[<p>今回からは計算過程での，ケアレスミスを防ぐテクニックについて書いていきます．</p>

<p>1つ目の方法は<strong>反復法</strong>です．（名前は勝手につけたものなので，覚えるようなものではないです）</p>

<p>これは，1度行った計算をもう一度繰り返して一致するかどうか確かめるという方法です．  ポイントは1回目の計算をあまり見ないようにすることです．1回目の計算を見てしまうとその式に引きずられて同じように間違いやすくなるからです．</p>

<hr />

<p>この方法のメリット，デメリットを説明します．</p>

<!-- more -->

<p>メリットは，<strong>どういう場合にでも使えること</strong>です．どんな計算でもこの方法を使えます．</p>

<p>デメリットは<strong>時間がかかってしまうこと</strong>と，<strong>2回とも同じように間違ってしまう可能性があること</strong>です．<br />
同じように間違う，というのは計算ミスを2回ともしてしまうという場合に加えて，そもそも計算方法を間違えて覚えてしまっている（∑の展開，積分など）場合には間違いを見つけられません．</p>

<hr />

<p>デメリットはありますが，どんなときにも使える汎用的な方法なので，是非試してみてください．</p>

<h3 id="section">今日のポイント</h3>

<p><strong>反復法(1度行った計算をもう一度繰り返して一致するかどうか確かめる)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ケアレスミスの防ぎ方]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/02/careless-mis/"/>
    <updated>2014-03-02T22:25:51+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/02/careless-mis</id>
    <content type="html"><![CDATA[<p>少し前に数学は<strong>間違えないことが大事</strong>だと書きました．<br />
ここから数回にわたって，間違えないためにはどうすればいいのか，ということを書いていこうかと思います．</p>

<p>間違えるパターンは大きく分けて2種類あります．</p>

<ul>
  <li>論理の誤り</li>
  <li>ケアレスミス</li>
</ul>

<p>論理の誤りとは，簡単に言うと 「Aであるから，Bである」 と考えたけれどもそれが間違っている場合です．</p>

<p>ケアレスミスは，計算ミスや数字の書き間違いなどのミスのことです．</p>

<p>気をつけて，確実に減らすことができるのはケアレスミスの方です．そこでまずはケアレスミスの減らし方を見ていきます．</p>

<hr />

<!-- more -->

<p>ケアレスミスを減らすために有効なのは，何度も確かめることです．  </p>

<p>例えば，Aさんは計算が苦手で，計算問題を解いて正解できる確率が80%だとします．<br />
このときAさんがいつも通りに解くとすると，点数は80点となります．</p>

<p>ですが，Aさんが問題を解き終わった後に，再度始めから解いてみるとどうなるでしょうか？</p>

<p>Aさんが2回とも間違う確率は0.2×0.2 = 0.04 となり，たった4%となります．  2回の計算が一致しなかった（一回は間違えた）場合は，その2つの計算を見比べることで間違いに気付けるでしょう．<br />
少なくとも1回正解した問題は正解できるとすると，点数は96点です．</p>

<p>このように確かめる回数を増やせば，その分正解する確率をあげることができます．</p>

<h3 id="section">今日のポイント</h3>
<p><strong>何度も確かめることでケアレスミスを減らす</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[同値を意識する]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/02/hitsuyo-jubun3/"/>
    <updated>2014-03-02T00:16:40+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/02/hitsuyo-jubun3</id>
    <content type="html"><![CDATA[<p>前回<strong>解と問題は同値なもの</strong>と説明しました．</p>

<p>今回は問題を解いていく過程で同値を意識すれば，問題が解きやすくなることについて説明しようと思います．</p>

<!-- more -->

<p>問題となる条件をいくつかに分解できる場合があります．</p>

<p>例えば，</p>

<script type="math/tex; mode=display">
関数~~y=ax^2+bx+c\\
が~~(0,1), (1,6) ,(2,15)を通る場合，a,b,c の値を求めよ
</script>

<p>という問題の場合</p>

<script type="math/tex; mode=display">
ⅰ.~~ y=ax^2+bx+c\\
ⅱ.~~ x=0,~y=1\\
ⅲ.~~ x=1,~y=6\\
ⅳ.~~ x=2,~y=15
</script>

<p>という4つに分割できます．</p>

<p>この条件の一部を同値なものに変形した場合，元々の条件を考える代わりに変形後の条件を考えれば良くなります．言い換えれば，変形後の条件を考えれば元々の条件を考える必要がなくなる，ということです．</p>

<p>先ほどの例の場合には</p>

<script type="math/tex; mode=display">
ⅰ.~~ y=ax^2+bx+c\\
ⅱ.~~ x=0,~y=1\\
\iff\\
ⅰ'.~~ y=ax^2+bx+1\\
ⅱ'.c=1
</script>

<p>と変形できます．<br />
このとき，ⅰ,ⅱ,ⅲ,ⅳを考える代わりにⅰ’,ⅱ’,ⅲ,ⅳを考えればよいということです．</p>

<p>ⅰ’,ⅱ’,ⅲ,ⅳに対して，ⅱの条件を考えても意味はありません．ⅰ’に$x=0,~y=1$を代入しても$1=1$となり何も得られません．</p>

<hr />

<p>問題がなかなか解けないときには，すでに使われている条件をもう一度考えてしまうことがよくあります．<br />
ⅰ’に対してⅱを使おうとしてしまう場合です．</p>

<p>しかしこれは意味のないことで，まだ考慮していない条件を使わなければいけません．<br />
どの条件と同値なものを考えられているか，ということを意識することで，次はまだ考えていない条件を使って変形をすればよくなるということがわかります．<br />
そのため，意味のない考えを少なくすることができるので，問題が解きやすくなります．</p>

<h3 id="section">今日のポイント</h3>

<p><strong>条件の一部を同値なものに変形した場合，変形後の条件のみを考えれば良い</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[必要×十分=?]]></title>
    <link href="http://tarukosu.github.io/blog/2014/02/28/hitsuyo-jubun2/"/>
    <updated>2014-02-28T07:56:04+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/02/28/hitsuyo-jubun2</id>
    <content type="html"><![CDATA[<script type="math/tex; mode=display">
p \Rightarrow q \\
p \Leftarrow q
</script>

<p>が両方とも成り立つ時，
$$
p \iff q 
$$</p>

<p>と表わせ，<strong>pとqは同値である</strong>，または<strong>pはqであるための必要十分条件である</strong>と呼びます．</p>

<p>この<strong>同値</strong>というものがどうして重要かというと，数学の解（最終的な答え）というのは基本的には問題と同値なものであるからです．</p>

<hr />

<p>少し具体的に見ていきます．</p>

<p>簡単な例ですが，次のような問題文を考えます．
$$
x(x-1) = x ~~を満たすxを求めよ
$$</p>

<!-- more -->

<p>誤った答え1</p>

<script type="math/tex; mode=display">
x(x-1) = x \\
x-1 = 1 \\
x = 2
</script>

<p>2行目の$x-1=0$というのは1行目に対する十分条件ですが必要条件ではありません．</p>

<p>$$
x(x-1) = x \Leftarrow
x-1 = 1 
$$
は正しいが，</p>

<p>$$
x(x-1) = x \Rightarrow
x-1 = 1 
$$
は誤り．</p>

<p>このように，問題に対して十分条件（必要十分ではない）を考えてしまうと，求まった解は確かに問題の条件を満たすけれども他の解を見落としている，ということになります．</p>

<hr />

<p>誤った答え2</p>

<script type="math/tex; mode=display">
x(x-1) = x \\
左辺，右辺の正負が一致するには，\\
x-1 \ge 0 \\
x \ge 1

</script>

<p>この場合は，3行目の$x-1\ge 0$というのは1行目に対する必要条件ですが十分条件ではありません．</p>

<p>このように，問題に対して必要条件だけを考えてしまうと，求まった解には解が含まれているけれども絞りきれていない（解でないものも含まれている）ということになります．</p>

<hr />

<p>正しい解</p>

<script type="math/tex; mode=display">
x(x-1) = x \\
x(x-2) = 0 \\
x = 0, 2
</script>

<p>これでは，2行目，3行目ともに上の行と同値な数式です．<br />
そのため，問題と同値な解を得ることができます．</p>

<hr />

<p>今回は簡単な例だったので，正しい解のように解けることが当たり前の様に感じるかもしれません．ですが，問題が少し難しくなると，気づかぬうちに必要条件のみ，または十分条件のみ，となってしまうことがあります．<br />
$x$ が $\cos{x}$に置き換わっているだけでも，誤りは増えてしまうでしょう．</p>

<p>問題を解く際には，必要条件十分条件を意識して，<strong>同値</strong>なものを求められているかに注意してください．</p>

<h3 id="section">今日のポイント</h3>
<p><strong>解と問題は同値なもの</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[必要条件と十分条件]]></title>
    <link href="http://tarukosu.github.io/blog/2014/02/27/hitsuyo-jubun/"/>
    <updated>2014-02-27T22:11:27+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/02/27/hitsuyo-jubun</id>
    <content type="html"><![CDATA[<p>必要条件，十分条件は聞いたことがあるでしょうか？</p>

<p>高校数学では比較的早く習う単元ですが，あまりよく理解できていない（できてなかった）人が多いような気がします．<br />
ですが，これはこの分野の問題に対してだけではなく，あらゆる数学の問題を解く上で大変重要な概念なのでしっかり理解してほしいです．</p>

<p>そのため，今日はこれらについて解説したいと思います．</p>

<!-- more -->

<p>定義は以下のようなものです．
$$
p \Rightarrow q ~~(~~ pならばq~~ ) であるとき，
$$</p>

<script type="math/tex; mode=display">
p~は~q~であるための十分条件
</script>

<script type="math/tex; mode=display">
q~は~p~であるための必要条件
</script>

<p>となります．<br />
pとかqだとよくわからないな…という人は
p に$x=1$, q に$x^2=1$を当てはめて考えてみてください．</p>

<p>ですが，これをただ暗記するだけでは理解したことにはなりませんし，よく間違えてしまいます．</p>

<hr />

<p>このような名前がつくのにはちゃんと理由があります．</p>

<p>まず，
「pはqであるための十分条件」について見ていきます．</p>

<p><strong>pはqであるための~条件</strong>というのは，いいかえれば<br />
<strong>qが成り立つためには，pという条件はどういう役割なのか</strong>ということです．</p>

<p>$$
p \Rightarrow q
$$
というのはpが成り立つときqは成り立つ，という意味です．<br />
つまりqが成り立つにはどういう条件が必要かな，と考えた時にpという条件が成り立てば十分（それさえあればqが成り立つと言えるということ）です．  </p>

<p>そのため，
$$
p~は~q~であるための十分条件
$$</p>

<p>と呼ぶのです．</p>

<hr />

<p>つぎに，
「qはpであるための必要条件」について見ていきます．</p>

<p>$$
p \Rightarrow q
$$
は対偶を取ると
$$
\overline{q} \Rightarrow \overline{p} ~~~(qでないならpでない)
$$
となります．</p>

<p>このときpが成り立つにはどういう条件が必要かな，と考えると，
「qでないならpでない」なので少なくともqである必要があります．  ただし「qが成り立つと必ずpが成り立つか」と言われるとそうではありません．</p>

<p>つまり，pが成り立つにはqという条件は必要だけれども，それだけでいいというわけではないということです．</p>

<p>そのため，
$$
q~は~p~であるための必要条件
$$
となります．</p>

<hr />

<p>理解できましたでしょうか？<br />
よくわからなかった場合には，
p に$x=1$, q に$x^2=1$を当てはめて読んでみて，なれてきたらp,qで考えてみてください．</p>

<h3 id="section">今日のポイント</h3>
<p><strong>pはqであるための~条件</strong>というのは<br />
<strong>qが成り立つためには，pという条件はどういう役割なのか</strong>ということ</p>
]]></content>
  </entry>
  
</feed>
