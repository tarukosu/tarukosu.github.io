<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Study | 東大院生プログラマの日常]]></title>
  <link href="http://tarukosu.github.io/blog/categories/study/atom.xml" rel="self"/>
  <link href="http://tarukosu.github.io/"/>
  <updated>2014-03-09T22:06:40+09:00</updated>
  <id>http://tarukosu.github.io/</id>
  <author>
    <name><![CDATA[tarukosu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[次元法（ケアレスミスの防ぎ方）]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/09/dimension/"/>
    <updated>2014-03-09T21:04:47+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/09/dimension</id>
    <content type="html"><![CDATA[<p>今回は計算過程でのケアレスミスを防ぐテクニックその5 <strong>次元法</strong>です．</p>

<p>これは答えの次元が合っているかを確認する方法です．  </p>

<!-- more -->

<p>例<br />
「1辺がnの正六角形の面積を求めよ．」<br />
という問題の場合，答えには $n^2$ が使われるはずです．<br />
なぜなら， $n$ が2倍になると，面積は4倍になる( $n^2$ に比例する)からです．</p>

<p>そのため，答えが $3n^3$ や $2n$ となっていれば間違いであるとわかります．</p>

<hr />

<p>この方法のメリットは確認が簡単にできることです．<br />
デメリットは，次元がどうなっていれば正解なのか，というのが感覚的になってしまうことです．そのため，あまり信頼できない確認法となってしまいます．</p>

<hr />

<p>次元法とは話が少し違ってしまいますが，答えが正しい範囲に入っているかということを確かめることは重要です．  </p>

<p>例をいくつか挙げてみます．</p>

<ul>
  <li>面積  → 正の値になっているか</li>
  <li>確率  → 0以上1以下になっているか</li>
  <li>場合の数    → 整数になっているか</li>
</ul>

<p>確認を行うことで間違いに気づくことができるでしょう．</p>

<h3 id="section">今日のポイント</h3>
<p><strong>次元法（答えの次元が合っているか確認する）</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[代入法（ケアレスミスの防ぎ方）]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/08/substitution/"/>
    <updated>2014-03-08T00:18:48+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/08/substitution</id>
    <content type="html"><![CDATA[<p>今回は計算過程でのケアレスミスを防ぐテクニックその3 <strong>代入法</strong>です．</p>

<p>これは，計算や式変形を行う前と行った後の文字に同じ値を代入し，その時に両方の式が一致するかを確かめる方法です．  </p>

<!-- more -->

<p>例１</p>

<script type="math/tex; mode=display">

x^2-3x-28=0\\
(x-7)(x+4)=0

</script>

<p>という因数分解の場合，$x=7$を代入すると，下の式の左辺は0になります（等式が成り立つ） ．<br />
これを上側の式に代入すると$7^2-3\times 7-28=0$となり，同じく0になっています（等式が成り立つ）．</p>

<p>例２</p>

<script type="math/tex; mode=display">
\sum_{k=1}^{n} k=\frac{n(n+1)}{2}
</script>

<p>$n=1$を代入すると，左辺は$\sum_{k=1}^{1}=1$，右辺は$\frac{1\times2}{2}=1$となり一致します．</p>

<hr />
<p>この方法のメリットは<strong>計算が比較的簡単なこと</strong>です．<br />
ただし，代入する値によって計算の難しさは変わってくるので，できるだけ計算しやすい値を代入するといいと思います．</p>

<p>もうひとつのメリットは<strong>離れた数式でも比較できる</strong>ことです．<br />
どういうことかというと，$A=B=C=D=E$と変形があった場合，これまでの反復法，逆戻り法では前後の数式同士の比較になっていたのですが，代入法の場合はAとEにそれぞれ代入することで離れた数式でも確認できます．</p>

<p>また，”問題と答え”でも確認が可能です．  </p>

<p>例えば問題文中で$a_1=1$とされている数式の一般解を求める問題で，</p>

<script type="math/tex; mode=display">
a_n = n^2 -2n + 3
</script>

<p>と求めたとすると，一般解に$n=1$を代入した時の値は$a_1=2$となるためこの答えは間違っているとわかります．</p>

<p>また，確率の問題でも，$n$を用いた答えの場合には$n=1$などの値を代入することで，確認するといいでしょう．</p>

<hr />

<p>この方法のデメリットは，間違いが見つかるかどうかわからないところです．  </p>

<p>代入した時に一致しなければ間違っていると言えるのですが，一致したからと言って間違えていないとは言えません．<br />
たまたま代入した値の場合は一致したけれども，他の値の場合には異なっている，ということがありえるからです．</p>

<p>ですが，複数の値を代入することで，”本当は間違っているのに見つけられない”という割合を減らすことができます．<br />
3種類の値を代入してあっていれば，正しい割合はかなり高くなると思います．</p>

<p>文字を含んだ答えの場合には，3種類の値を代入して確かめる，ということをやってみてください．</p>

<h3 id="section">今日のポイント</h3>

<p><strong>代入法（計算を行う前と行った後の文字に同じ値を代入し，一致するかを確かめる）</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[逆戻り法（ケアレミスの防ぎ方）]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/06/reverse/"/>
    <updated>2014-03-06T21:40:24+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/06/reverse</id>
    <content type="html"><![CDATA[<p>今回は計算過程でのケアレスミスを防ぐテクニックその2，<strong>逆戻り法</strong>です．</p>

<p>これは，計算や式変形を行った後の式から，計算前・変形前の式に戻すことが出来るか（戻して一致するか）を確かめるという方法です．<br />
この方法のメリット・デメリットを説明します．</p>

<!-- more -->

<hr />

<p>メリットは，この方法が使える式であれば<strong>ほぼ確実に間違いを見つけることができる</strong>ことです．<br />
反復法では2回とも同じ間違いをしてしまうことはしばしばありえますが，逆戻り法では行う計算が異なっているために同じ間違いは起こりにくくなります．    </p>

<p>もうひとつのメリットは，<strong>計算後から計算前への変形が簡単な場合に，確かめが簡単になる</strong>ことです．<br />
例えば，因数分解はこのような例です．</p>

<script type="math/tex; mode=display">
x^2-3x-28=0\\
(x-7)(x+4)=0
</script>

<p>という因数分解は，</p>

<script type="math/tex; mode=display">
(x-7)(x+4)=0\\
x^2-3x-28=0
</script>

<p>と展開することにより確かめられます．</p>

<p>また，簡単な引き算も意外と間違えてしまうことがありますが，</p>

<script type="math/tex; mode=display">
144 - 76 = 68
</script>

<p>と計算した後で，</p>

<script type="math/tex; mode=display">
76 + 68 = 144
</script>

<p>として確認することができます．</p>

<hr />

<p>デメリットは，積分計算や∑の計算などのもとに戻すことの方が難しい計算があるということです．このような場合には，別の方法を使ったほうがよいでしょう．</p>

<p>どのような場合に有効で，どのような場合に役に立たないのかは，いろいろな問題を解いていくなかで試して確かめてみてください．</p>

<h3 id="section">今日のポイント</h3>
<p><strong>逆戻り法（計算後の式から，計算前の式に戻すことが出来るか確かめる）</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[反復法（ケアレスミスの防ぎ方）]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/03/repeat/"/>
    <updated>2014-03-03T23:07:22+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/03/repeat</id>
    <content type="html"><![CDATA[<p>今回からは計算過程での，ケアレスミスを防ぐテクニックについて書いていきます．</p>

<p>1つ目の方法は<strong>反復法</strong>です．（名前は勝手につけたものなので，覚えるようなものではないです）</p>

<p>これは，1度行った計算をもう一度繰り返して一致するかどうか確かめるという方法です．  ポイントは1回目の計算をあまり見ないようにすることです．1回目の計算を見てしまうとその式に引きずられて同じように間違いやすくなるからです．</p>

<hr />

<p>この方法のメリット，デメリットを説明します．</p>

<!-- more -->

<p>メリットは，<strong>どういう場合にでも使えること</strong>です．どんな計算でもこの方法を使えます．</p>

<p>デメリットは<strong>時間がかかってしまうこと</strong>と，<strong>2回とも同じように間違ってしまう可能性があること</strong>です．<br />
同じように間違う，というのは計算ミスを2回ともしてしまうという場合に加えて，そもそも計算方法を間違えて覚えてしまっている（∑の展開，積分など）場合には間違いを見つけられません．</p>

<hr />

<p>デメリットはありますが，どんなときにも使える汎用的な方法なので，是非試してみてください．</p>

<h3 id="section">今日のポイント</h3>

<p><strong>反復法(1度行った計算をもう一度繰り返して一致するかどうか確かめる)</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ケアレスミスの防ぎ方]]></title>
    <link href="http://tarukosu.github.io/blog/2014/03/02/careless-mis/"/>
    <updated>2014-03-02T22:25:51+09:00</updated>
    <id>http://tarukosu.github.io/blog/2014/03/02/careless-mis</id>
    <content type="html"><![CDATA[<p>少し前に数学は<strong>間違えないことが大事</strong>だと書きました．<br />
ここから数回にわたって，間違えないためにはどうすればいいのか，ということを書いていこうかと思います．</p>

<p>間違えるパターンは大きく分けて2種類あります．</p>

<ul>
  <li>論理の誤り</li>
  <li>ケアレスミス</li>
</ul>

<p>論理の誤りとは，簡単に言うと 「Aであるから，Bである」 と考えたけれどもそれが間違っている場合です．</p>

<p>ケアレスミスは，計算ミスや数字の書き間違いなどのミスのことです．</p>

<p>気をつけて，確実に減らすことができるのはケアレスミスの方です．そこでまずはケアレスミスの減らし方を見ていきます．</p>

<hr />

<!-- more -->

<p>ケアレスミスを減らすために有効なのは，何度も確かめることです．  </p>

<p>例えば，Aさんは計算が苦手で，計算問題を解いて正解できる確率が80%だとします．<br />
このときAさんがいつも通りに解くとすると，点数は80点となります．</p>

<p>ですが，Aさんが問題を解き終わった後に，再度始めから解いてみるとどうなるでしょうか？</p>

<p>Aさんが2回とも間違う確率は0.2×0.2 = 0.04 となり，たった4%となります．  2回の計算が一致しなかった（一回は間違えた）場合は，その2つの計算を見比べることで間違いに気付けるでしょう．<br />
少なくとも1回正解した問題は正解できるとすると，点数は96点です．</p>

<p>このように確かめる回数を増やせば，その分正解する確率をあげることができます．</p>

<h3 id="section">今日のポイント</h3>
<p><strong>何度も確かめることでケアレスミスを減らす</strong></p>
]]></content>
  </entry>
  
</feed>
